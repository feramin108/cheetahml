version: "3.8"
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - monitoring

  redis_exporter:
    image: oliver006/redis_exporter
    container_name: redis_exporter
    ports:
      - "9121:9121"
    restart: unless-stopped
    command: [ "--redis.addr=redis:6379" ]  # Specify the Redis server address
    depends_on:
      - redis
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - TERM=linux
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - '9090:9090'
    networks:
      - monitoring

#  flower:
#    container_name: flower
#    image: mher/flower
#    build:
#      dockerfile: Dockerfile.flower
#      context: .
#    restart: unless-stopped
#    ports:
#      - "5555:5555"
##    command: celery -A cheetah.flower.flower.flower_base._celery_app flower --port 5555
#    networks:
#      - monitoring

#  grpc-server:
#      context: .
#      dockerfile: Dockerfile.grpc
#    container_name: grpc
#    ports:
#      - "50051:50051"
#      - "8000:8000"
#    networks:
#      - monitoring

volumes:
  grafana_storage: { }
  prometheus_data: { }


networks:
  monitoring:
    external: true